[AsaManagerService]
webservice_port = 9024


; Storage where ASA will write telemetry messages
; The application is responsible for preparing this storage before the ASA Job starts
[AsaManagerService:MessagesStorage]
storageType = "${PCS_TELEMETRY_STORAGE_TYPE}"
cosmosdbsql_connstring = "${PCS_TELEMETRY_DOCUMENTDB_CONNSTRING}"
cosmosdbsql_database = "pcs-iothub-stream"
cosmosdbsql_collection = "messages"
; For telemetry scenarios, eventual consistency is ok
cosmosdbsql_consistency_level = "Eventual"
; 2500 => unlimited space - see https://docs.microsoft.com/en-us/azure/cosmos-db/partition-data
cosmosdbsql_RUs = 2500


; Storage where ASA will write alarms
; The application is responsible for preparing this storage before the ASA Job starts
[AsaManagerService:AlarmsStorage]
storageType = "CosmosDbSql"
cosmosdbsql_connstring = "${PCS_TELEMETRY_DOCUMENTDB_CONNSTRING}"
cosmosdbsql_database = "pcs-iothub-stream"
cosmosdbsql_collection = "alarms"
; For telemetry scenarios, eventual consistency is ok
cosmosdbsql_consistency_level = "Eventual"
; 400 => fixed storage 10GB - see https://docs.microsoft.com/en-us/azure/cosmos-db/partition-data
cosmosdbsql_RUs = 400

[AsaManagerService:EventHub]
; Connection string for event hub
connection_string = ${PCS_EVENTHUB_CONNSTRING}
; Name of event hub
name = ${PCS_EVENTHUB_NAME}
; event hub checkpoint interval in msecs
checkpoint_interval_msecs = 60000

[AsaManagerService:BlobStorage]
; Blob Storage Container name for ASA reference data
reference_data_container="referenceinput"
; Blob Storage Container name for Event Hub Checkpoints
eventhub_container="eventhub-checkpoints"
; Blob Storage Account Name
account_name=${PCS_ASA_DATA_AZUREBLOB_ACCOUNT}
; Blob Storage Account Key
account_key=${PCS_ASA_DATA_AZUREBLOB_KEY}
; Blob Storage Endpoint Suffix
account_endpoint=${?PCS_ASA_DATA_AZUREBLOB_ENDPOINT_SUFFIX}
; Following parameters create file path for device groups mapping
; in blob storage. 
; File path will be:
; {YYYY-MM-DD}/{HH-mm}/{device_groups_file_name}
; For ASA file name must be in this format, see:
; https://docs.microsoft.com/en-us/azure/stream-analytics/stream-analytics-use-reference-data
reference_data_date_format="yyyy-MM-dd"
reference_data_time_format="HH-mm"
reference_data_device_groups_file_name="devicegroups.csv"
reference_data_rules_file_name="rules.json"


[AsaManagerService:Logging]
; Application log levels: Debug, Info, Warn, Error
; Default: Warn
LogLevel = "${?PCS_LOG_LEVEL}"
; Whether to log the ProcessId, true by default
IncludeProcessId = true
; How to format the datetime in the logs
; example: DateFormat = "yyyy-MM-dd HH:mm:ss.fff"
DateFormat = "yyyy-MM-dd HH:mm:ss.fff"
; Prefix to add to the items listed in BlackListSources and WhiteListSources
; example: BWListPrefix = "Microsoft.Azure.IoTSolutions.AsaManager."
BWListPrefix = "Microsoft.Azure.IoTSolutions.AsaManager."
; Comma separated list of classes and methods to ignore, i.e. discard logs from
; example: BlackListSources = "AsaConfigAgent.Program,HttpClient.*"
BlackListSources = ""
; Comma separated list of classes and methods to include, i.e. discard everything else
; example: WhiteListSources = "HttpClient.*"
WhiteListSources = ""
; Whether to generate extra log files to diagnose the application. This is disk I/O intensive
; and most likely affects the overall performance. Enable this option only for development
; to get detailed information about the state of each actor and each device.
; Default: false
ExtraDiagnostics = false
; Folder to store the extra diagnostics. Logging is disabled if the folder cannot
; be created or is not writable.
ExtraDiagnosticsPath = "/tmp/asa/"


[AsaManagerService:ClientAuth]
; Current auth type, only "JWT" is currently supported.
auth_type="JWT"
; This can be changed to false, for example during development,
; to allow invalid/missing authorizations.
; Default: true
auth_required="${?PCS_AUTH_REQUIRED}"
; Can be used when running services on multiple hostnames and/or ports
; e.g. "{ 'origins': ['*'], 'methods': ['*'], 'headers': ['*'] }" to allow everything.
; Comment it or leave it empty to disable CORS.
; Default: empty
cors_whitelist = "${?PCS_CORS_WHITELIST}"


[AsaManagerService:ClientAuth:JWT]
; Trusted algorithms
; Default: RS256, RS384, RS512
allowed_algorithms="RS256"
; Identifies the security token service (STS) that constructs and returns the token.
; In the tokens that Azure AD returns, the issuer is sts.windows.net. The GUID in
; the Issuer claim value is the tenant ID of the Azure AD directory. The tenant ID
; is an immutable and reliable identifier of the directory.
; Used to verify that tokens are issued by Azure AD.
; When using Azure Active Directory, the format of the Issuer is:
; https://sts.windows.net/<tenant Id>/
; example: issuer="https://sts.windows.net/fa01ade2-2365-4dd1-a084-a6ef027090fc/"
issuer="${?PCS_AUTH_ISSUER}"
; Used to verify that tokens are issued to be given to this service
; Also referenced as "Application Id" and "Resource Id"
; example: audience="2814e709-6a0e-4861-9594-d3b6e2b81331"
audience="${?PCS_AUTH_AUDIENCE}"
; When validating the token expiration, allows some clock skew
; Default: 2 minutes
clock_skew_seconds = 300

; The Device Telemetry service is used to retrieve the list
; of monitoring rules, which are used to generate ASA Jobs configuration
[DeviceTelemetryService]
; e.g. http://127.0.0.1:9004/v1/rules
webservice_url = ${PCS_TELEMETRY_WEBSERVICE_URL}
; timeout value in milliseconds
webservice_timeout_msecs = 10000

; The Configuration service is used to retrieve the list
; of device groups, which are referenced in the monitoring rules
[PCSConfigurationService]
; e.g. http://127.0.0.1:9005/v1
webservice_url = ${PCS_CONFIG_WEBSERVICE_URL}
; timeout value in milliseconds
webservice_timeout_msecs = 10000

; The IoT Hub Manager service is used to run device queries,
; e.g. to retrieve the list of device IDs in a device group
[IoTHubManagerService]
; e.g. http://127.0.0.1:9002/v1
webservice_url = ${PCS_IOTHUBMANAGER_WEBSERVICE_URL}
; timeout value in milliseconds
webservice_timeout_msecs = 10000
; number of retries to attempt before failing
retry_count = 5
; initial interval to wait before retrying. Subsequent retries will
; increase interval by retry_increase_factor
initial_retry_interval_msecs = 750
retry_increase_factor = 2


; For more information about ASP.NET logging see
; https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging
; This configuration block is used only to capture
; internal logs generated by ASP.NET
; ASP.NET log levels: Trace, Debug, Information, Warning, Error, Critical
[Logging]
IncludeScopes = true
LogLevel:Default = "Warning"
LogLevel:System = "Warning"
LogLevel:Microsoft = "Warning"

